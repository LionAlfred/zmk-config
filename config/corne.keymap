/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "helper.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include "greek.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define U_MOUSE_MOVE_MAX 1400

/ {
    combos {
        compatible = "zmk,combos";

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        bracket_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 20>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        lf {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
        };

        rba {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <16 17>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <7 8>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
        };

        multiplu {
            bindings = <&kp KP_ASTERISK>;
            key-positions = <9 10>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <21 22>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <9 8>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 3>;
        };

        tick {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <37 38>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 4>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 5>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 29>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <6 7>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <15 16>;
        };

        exam {
            bindings = <&kp EXCL>;
            key-positions = <1 2>;
        };
    };

    macros {
        love: love {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp X &kp I &kp A &kp O &kp SPACE &kp Y &kp A &kp N &kp G &kp COMMA &kp SPACE &kp LS(I) &kp SPACE &kp L &kp O &kp V &kp E &kp SPACE &kp Y &kp O &kp U &kp COMMA &kp SPACE &kp F &kp O &kp R &kp SPACE &kp E &kp V &kp E &kp R &kp Y &kp SPACE &kp T &kp H &kp I &kp N &kp G &kp SPACE &kp W &kp E &kp SPACE &kp H &kp A &kp V &kp E &kp SPACE &kp B &kp E &kp E &kp N &kp SPACE &kp T &kp H &kp R &kp O &kp U &kp G &kp H &kp COMMA &kp SPACE &kp LS(I) &kp SPACE &kp A &kp M &kp SPACE &kp R &kp O &kp O &kp T &kp I &kp N &kp G &kp SPACE &kp F &kp O &kp R &kp SPACE &kp Y &kp O &kp U>;
            label = "LOVE";
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 35 34 33 21 20 19 18 30 31 32 41 40 39>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layout0 {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R    &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P     &kp BSPC
&lt 1 CAPSLOCK  &kp A  &kp S  &kp D     &kp F    &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI  &kp APOS
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V    &kp B          &kp LGUI   &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH
                              &kp LALT  &kp DEL  &lt 2 SPACE    &kp SPACE  &kp ENTER  &kp RSHFT
            >;
        };

        layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6     &kp N7  &kp N8     &kp N9    &kp N0    &kp EQUAL
&trans     &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans     &trans    &trans    &kp MINUS
&none      &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans     &kp LBKT  &kp RBKT  &kp BSLH
                           &trans  &trans  &kp SPACE    &kp SPACE  &trans  &kp RSHFT
            >;
        };

        layer_2 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp N7     &kp N8  &kp N9  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp N4     &kp N5  &kp N6  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp N1     &kp N2  &kp N3  &trans  &trans  &trans
                                        &trans        &trans        &kp SPACE       &kp SPACE  &kp N0  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <3 1>;
            then-layer = <6>;
        };
    };
};
